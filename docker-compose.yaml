version: '3'

volumes:
  ngx_conf:
  ngx_vhost:
  ngx_html:
  ngx_dhparam:
  ngx_certs:
  ngx_acme:
  redis_data:
  postgres_data:
  backend_public:
  backend_private:

networks:
  sistema_rede_docker2:
    external: true
    name: sistema_rede_docker2  # Rede externa que já existe

services:

  nginx-proxy:
    image: nginxproxy/nginx-proxy
    container_name: ticketz-nginx-proxy
    restart: always
    ports:
      - "8880:80"
      - "8443:443"
    volumes:
      - ngx_conf:/etc/nginx/conf.d
      - ngx_vhost:/etc/nginx/vhost.d
      - ngx_html:/usr/share/nginx/html
      - ngx_dhparam:/etc/nginx/dhparam
      - ngx_certs:/etc/nginx/certs:ro
      - ./confs/nginx-ticketz.conf:/etc/nginx/conf.d/ticketz.conf
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      sistema_rede_docker2:
        ipv4_address: 192.168.0.16  # IP Estático

  acme-companion:
    image: nginxproxy/acme-companion
    container_name: ticketz-acme-companion
    restart: always
    depends_on:
      - nginx-proxy
    volumes:
      - ngx_vhost:/etc/nginx/vhost.d
      - ngx_html:/usr/share/nginx/html
      - ngx_dhparam:/etc/nginx/dhparam:ro
      - ngx_certs:/etc/nginx/certs
      - ngx_acme:/etc/acme.sh
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - NGINX_PROXY_CONTAINER=ticketz-nginx-proxy
    networks:
      sistema_rede_docker2:
        ipv4_address: 192.168.0.17  # IP Estático

  backend:
    image: ghcr.io/ticketz-oss/ticketz-backend:latest
    volumes:
      - backend_public:/usr/src/app/public
      - backend_private:/usr/src/app/private
    env_file:
      - .env-backend
    restart: always
    depends_on:
      - acme-companion
      - postgres
      - redis
    networks:
      sistema_rede_docker2:
        ipv4_address: 192.168.0.18  # IP Estático

  frontend:
    image: ghcr.io/ticketz-oss/ticketz-frontend:latest
    volumes:
      - backend_public:/var/www/backend-public
    env_file:
      - .env-frontend
    restart: always
    depends_on:
      - acme-companion
      - backend
    networks:
      sistema_rede_docker2:
        ipv4_address: 192.168.0.19  # IP Estático

  postgres:
    image: postgres:16-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-ticketz}
      - POSTGRES_DB=${POSTGRES_DB:-ticketz}
      - POSTGRES_HOST_AUTH_METHOD=trust
      - TZ=${TZ:-America/Sao_Paulo}
    expose:
      - 5432
    restart: always
    networks:
      sistema_rede_docker2:
        ipv4_address: 192.168.0.20  # IP Estático

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    expose:
      - 6379
    restart: always
    volumes:
      - redis_data:/data
    networks:
      sistema_rede_docker2:
        ipv4_address: 192.168.0.21  # IP Estático

  watchtower:
    image: containrrr/watchtower
    profiles: ["do-not-start"]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 1800 --cleanup
    restart: unless-stopped

  sidekick:
    image: ghcr.io/ticketz-oss/ticketz-sidekick:latest
    profiles: ["do-not-start"]
    env_file:
      - .env-backend
    restart: unless-stopped
    volumes:
      - backend_public:/backend-public
      - backend_private:/backend-private
      - ./backups:/backups
      - ./retrieve:/retrieve
    depends_on:
      - postgres
    networks:
      sistema_rede_docker2:
        ipv4_address: 192.168.0.22  # IP Estático
